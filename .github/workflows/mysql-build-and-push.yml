name: Mysql Build and Push and EC2 CD

on:
  push:
    branches:
      - main
    paths:
      - 'easydocker/mysql/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest  
    # 가장 최신의 Ubuntu 러너를 사용합니다.

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      # 현재 리포지토리를 체크아웃합니다.

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  
      # Docker Buildx를 설정합니다.

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}  
        # GitHub Secret에서 Docker Hub 사용자 이름을 가져옵니다.
        password: ${{ secrets.DOCKERHUB_TOKEN }}     
        # GitHub Secret에서 Docker Hub 액세스 토큰을 가져옵니다.

    - name: Build and Push
      uses: docker/build-push-action@v2
      with:
        context: ./easydocker/mysql  
        # Dockerfile이 있는 위치입니다.
        file: ./easydocker/mysql/Dockerfile  
        # Dockerfile의 경로입니다.
        push: true  
        # 이미지를 레지스트리에 푸시합니다.
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/mmt-mysql:${{ github.sha }}
        platforms: linux/amd64,linux/arm64

    # 서버에서 Docker 이미지 실행 (스크립트의 도커 앞에 sudo를 붙인 블로그도 있음)
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: EC2 Docker Run
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        password: ${{ secrets.EC2_PASSWORD }}
        port: ${{ secrets.EC2_PORT }}
        script: |
          docker rm -f mmt-mysql
          docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/mmt-mysql:${{ github.sha }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mmt-mysql:${{ github.sha }}
          docker-compose up -d mmt-mysql
          docker system prune -f
# 다 성공하고 나서 system 말고 image로 해서 컨테이너 띄운 이미지 삭제하는 거 추가하기
# 지금은 이미지가 매번 푸시할 때마다 새로 추가 돼